{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///D:/3rd%20Year/Projects/Project-Xpo/qsa%20-%20Copy/quant-sec-web/src/components/ThemeRegistry.tsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n  },\r\n});\r\n\r\nexport default function ThemeRegistry({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n} "],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AAHA;;;;AAKA,MAAM,QAAQ,CAAA,GAAA,2MAAA,CAAA,cAAW,AAAD,EAAE;IACxB,SAAS;QACP,MAAM;IACR;AACF;AAEe,SAAS,cAAc,EAAE,QAAQ,EAAiC;IAC/E,qBACE,8OAAC,+MAAA,CAAA,gBAAa;QAAC,OAAO;;0BACpB,8OAAC,sKAAA,CAAA,UAAW;;;;;YACX;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///D:/3rd%20Year/Projects/Project-Xpo/qsa%20-%20Copy/quant-sec-web/src/lib/api.ts"],"sourcesContent":["// API client for communicating with the Django backend\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/quantserver';\n\nexport interface User {\n  name: string;\n  username: string;\n  publicKey: string;\n}\n\nexport interface Email {\n  sender: string;\n  sender_email?: string;\n  sender_name?: string;\n  receiver: string;\n  datetime_of_arrival: string;\n  encrypted_subject: string;\n  encrypted_body: string;\n}\n\nexport interface ApiResponse<T = any> {\n  Message: string;\n  Status: 'Positive' | 'Negative';\n  [key: string]: any;\n}\n\nexport class ApiClient {\n  private static async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    const url = `${API_BASE_URL}/${endpoint}`;\n    \n    const response = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    return response.json();\n  }\n\n  // Check if username is unique\n  static async checkUsernameUniqueness(username: string): Promise<boolean> {\n    const response = await this.request(`check-uniqueness?username=${encodeURIComponent(username)}`, {\n      method: 'GET',\n    });\n    \n    // If Status is \"Positive\", the user doesn't exist (username is unique)\n    return response.Status === 'Positive';\n  }\n\n  // Register a new user\n  static async registerUser(\n    name: string,\n    email: string,\n    username: string,\n    publicKey: string,\n    privateKey: string,\n    password: string\n  ): Promise<boolean> {\n    const response = await this.request('register-user', {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        email,\n        username,\n        public_key: publicKey,\n        private_key: privateKey,\n        password,\n      }),\n    });\n\n    return response.Status === 'Positive';\n  }\n\n  // Get user's public key\n  static async getUserPublicKey(username: string): Promise<{ name: string; publicKey: string } | null> {\n    const response = await this.request(`get-public-key?username=${encodeURIComponent(username)}`, {\n      method: 'GET',\n    });\n\n    if (response.Status === 'Positive') {\n      return {\n        name: response.Name,\n        publicKey: response['Public Key'],\n      };\n    }\n\n    return null;\n  }\n\n  // Login with email or username\n  static async loginUser(identifier: string, password: string): Promise<ApiResponse> {\n    return this.request('login-user', {\n      method: 'POST',\n      body: JSON.stringify({ identifier, password }),\n    });\n  }\n\n  // Send an email (receiver/sender can be email or username)\n  static async sendEmail(\n    receiverIdentifier: string,\n    senderIdentifier: string,\n    encryptedSubject: string,\n    encryptedBody: string,\n    password: string\n  ): Promise<boolean> {\n    const response = await this.request('post-email', {\n      method: 'POST',\n      body: JSON.stringify({\n        reciever_username: receiverIdentifier,\n        sender_username: senderIdentifier,\n        subject: encryptedSubject,\n        body: encryptedBody,\n        password,\n      }),\n    });\n    return response.Status === 'Positive';\n  }\n\n  // Get user's inbox (identifier can be email or username)\n  static async getInbox(identifier: string, password: string): Promise<Email[]> {\n    const response = await this.request(`get-inbox?username=${encodeURIComponent(identifier)}&password=${encodeURIComponent(password)}`, {\n      method: 'GET',\n    });\n    if (response.Status === 'Positive') {\n      return response.Emails || [];\n    }\n    return [];\n  }\n\n  // Clear user's inbox (identifier can be email or username)\n  static async clearInbox(identifier: string, password: string): Promise<boolean> {\n    const response = await this.request('clear-inbox', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: identifier,\n        password,\n      }),\n    });\n    return response.Status === 'Positive';\n  }\n}\n\n// Local storage utilities for user data\nexport interface UserData {\n  name: string;\n  email: string;\n  username: string;\n  publicKey: string;\n  privateKey: string;\n  password: string;\n}\n\nexport class UserStorage {\n  private static readonly STORAGE_KEY = 'quantsec_user_data';\n\n  // Store user data securely\n  static storeUserData(userData: UserData): void {\n    try {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(userData));\n    } catch (error) {\n      console.error('Failed to store user data:', error);\n      throw new Error('Failed to store user data');\n    }\n  }\n\n  // Retrieve user data\n  static getUserData(): UserData | null {\n    try {\n      const data = localStorage.getItem(this.STORAGE_KEY);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.error('Failed to retrieve user data:', error);\n      return null;\n    }\n  }\n\n  // Check if user is logged in\n  static isLoggedIn(): boolean {\n    return this.getUserData() !== null;\n  }\n\n  // Get current user\n  static getCurrentUser(): UserData | null {\n    return this.getUserData();\n  }\n\n  // Clear user data (logout)\n  static clearUserData(): void {\n    try {\n      localStorage.removeItem(this.STORAGE_KEY);\n    } catch (error) {\n      console.error('Failed to clear user data:', error);\n    }\n  }\n\n  // Update user data (e.g., after key import/export)\n  static updateUserData(updates: Partial<UserData>): void {\n    const currentData = this.getUserData();\n    if (currentData) {\n      const updatedData = { ...currentData, ...updates };\n      this.storeUserData(updatedData);\n    }\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///D:/3rd%20Year/Projects/Project-Xpo/qsa%20-%20Copy/quant-sec-web/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { UserStorage, UserData } from '@/lib/api';\r\n\r\ninterface AuthContextType {\r\n  isLoggedIn: boolean;\r\n  currentUser: string | null;\r\n  login: (userData: UserData) => void;\r\n  logout: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  isLoggedIn: false,\r\n  currentUser: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    setIsLoggedIn(localStorage.getItem('isLoggedIn') === 'true');\r\n    setCurrentUser(localStorage.getItem('currentUser'));\r\n  }, []);\r\n\r\n  const login = (userData: UserData) => {\r\n    localStorage.setItem('isLoggedIn', 'true');\r\n    localStorage.setItem('currentUser', userData.username);\r\n    UserStorage.storeUserData(userData);\r\n    setIsLoggedIn(true);\r\n    setCurrentUser(userData.username);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('currentUser');\r\n    UserStorage.clearUserData();\r\n    setIsLoggedIn(false);\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isLoggedIn, currentUser, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext); "],"names":[],"mappings":";;;;;AAAA;AACA;;;;AASA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;IACjD,YAAY;IACZ,aAAa;IACb,OAAO,KAAO;IACd,QAAQ,KAAO;AACjB;AAEO,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAiC;IACtE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAE9D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,cAAc,aAAa,OAAO,CAAC,kBAAkB;QACrD,eAAe,aAAa,OAAO,CAAC;IACtC,GAAG,EAAE;IAEL,MAAM,QAAQ,CAAC;QACb,aAAa,OAAO,CAAC,cAAc;QACnC,aAAa,OAAO,CAAC,eAAe,SAAS,QAAQ;QACrD,iHAAA,CAAA,cAAW,CAAC,aAAa,CAAC;QAC1B,cAAc;QACd,eAAe,SAAS,QAAQ;IAClC;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,iHAAA,CAAA,cAAW,CAAC,aAAa;QACzB,cAAc;QACd,eAAe;IACjB;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAY;YAAa;YAAO;QAAO;kBACnE;;;;;;AAGP;AAEO,MAAM,UAAU,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///D:/3rd%20Year/Projects/Project-Xpo/qsa%20-%20Copy/quant-sec-web/src/app/layout.tsx"],"sourcesContent":["'use client';\nimport { useEffect } from 'react';\nimport { usePathname, useRouter } from 'next/navigation';\nimport ThemeRegistry from '../components/ThemeRegistry';\nimport { AuthProvider, useAuth } from '../context/AuthContext';\n\nfunction LayoutWithAuth({ children }) {\n  const pathname = usePathname();\n  const router = useRouter();\n  const { isLoggedIn } = useAuth();\n\n  useEffect(() => {\n    if (!isLoggedIn && (\n      pathname.startsWith('/dashboard') ||\n      pathname.startsWith('/compose') ||\n      pathname.startsWith('/inbox') ||\n      pathname.startsWith('/keys') ||\n      pathname.startsWith('/test')\n    )) {\n      router.replace('/login');\n    }\n  }, [pathname, router, isLoggedIn]);\n\n  return (\n    <ThemeRegistry>\n      {children}\n    </ThemeRegistry>\n  );\n}\n\nexport default function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <AuthProvider>\n          <LayoutWithAuth>{children}</LayoutWithAuth>\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMA,SAAS,eAAe,EAAE,QAAQ,EAAE;IAClC,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;IAE7B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,cAAc,CACjB,SAAS,UAAU,CAAC,iBACpB,SAAS,UAAU,CAAC,eACpB,SAAS,UAAU,CAAC,aACpB,SAAS,UAAU,CAAC,YACpB,SAAS,UAAU,CAAC,QACtB,GAAG;YACD,OAAO,OAAO,CAAC;QACjB;IACF,GAAG;QAAC;QAAU;QAAQ;KAAW;IAEjC,qBACE,8OAAC,mIAAA,CAAA,UAAa;kBACX;;;;;;AAGP;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;sBACC,cAAA,8OAAC,8HAAA,CAAA,eAAY;0BACX,cAAA,8OAAC;8BAAgB;;;;;;;;;;;;;;;;;;;;;AAK3B","debugId":null}}]
}