{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/projs/qsa/quant-sec-web/src/lib/api.ts"],"sourcesContent":["// API client for communicating with the Django backend\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:8000/quantserver';\n\nexport interface User {\n  name: string;\n  username: string;\n  publicKey: string;\n}\n\nexport interface Email {\n  sender: string;\n  sender_email?: string;\n  sender_name?: string;\n  receiver: string;\n  datetime_of_arrival: string;\n  encrypted_subject: string;\n  encrypted_body: string;\n}\n\nexport interface ApiResponse<T = any> {\n  Message: string;\n  Status: 'Positive' | 'Negative';\n  [key: string]: any;\n}\n\nexport class ApiClient {\n  private static async request<T>(\n    endpoint: string,\n    options: RequestInit = {}\n  ): Promise<ApiResponse<T>> {\n    const url = `${API_BASE_URL}/${endpoint}`;\n    \n    const response = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    return response.json();\n  }\n\n  // Check if username is unique\n  static async checkUsernameUniqueness(username: string): Promise<boolean> {\n    const response = await this.request(`check-uniqueness?username=${encodeURIComponent(username)}`, {\n      method: 'GET',\n    });\n    \n    // If Status is \"Positive\", the user doesn't exist (username is unique)\n    return response.Status === 'Positive';\n  }\n\n  // Register a new user\n  static async registerUser(\n    name: string,\n    email: string,\n    username: string,\n    publicKey: string,\n    password: string\n  ): Promise<boolean> {\n    const response = await this.request('register-user', {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        email,\n        username,\n        public_key: publicKey,\n        password,\n      }),\n    });\n\n    return response.Status === 'Positive';\n  }\n\n  // Get user's public key\n  static async getUserPublicKey(username: string): Promise<{ name: string; publicKey: string } | null> {\n    const response = await this.request(`get-public-key?username=${encodeURIComponent(username)}`, {\n      method: 'GET',\n    });\n\n    if (response.Status === 'Positive') {\n      return {\n        name: response.Name,\n        publicKey: response['Public Key'],\n      };\n    }\n\n    return null;\n  }\n\n  // Login with email or username\n  static async loginUser(identifier: string, password: string): Promise<ApiResponse> {\n    return this.request('login-user', {\n      method: 'POST',\n      body: JSON.stringify({ identifier, password }),\n    });\n  }\n\n  // Send an email (receiver/sender can be email or username)\n  static async sendEmail(\n    receiverIdentifier: string,\n    senderIdentifier: string,\n    encryptedSubject: string,\n    encryptedBody: string,\n    password: string\n  ): Promise<boolean> {\n    const response = await this.request('post-email', {\n      method: 'POST',\n      body: JSON.stringify({\n        reciever_username: receiverIdentifier,\n        sender_username: senderIdentifier,\n        subject: encryptedSubject,\n        body: encryptedBody,\n        password,\n      }),\n    });\n    return response.Status === 'Positive';\n  }\n\n  // Get user's inbox (identifier can be email or username)\n  static async getInbox(identifier: string, password: string): Promise<Email[]> {\n    const response = await this.request(`get-inbox?username=${encodeURIComponent(identifier)}&password=${encodeURIComponent(password)}`, {\n      method: 'GET',\n    });\n    if (response.Status === 'Positive') {\n      return response.Emails || [];\n    }\n    return [];\n  }\n\n  // Clear user's inbox (identifier can be email or username)\n  static async clearInbox(identifier: string, password: string): Promise<boolean> {\n    const response = await this.request('clear-inbox', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: identifier,\n        password,\n      }),\n    });\n    return response.Status === 'Positive';\n  }\n}\n\n// Local storage utilities for user data\nexport interface UserData {\n  name: string;\n  email: string;\n  username: string;\n  publicKey: string;\n  privateKey: string;\n  password: string;\n}\n\nexport class UserStorage {\n  private static readonly STORAGE_KEY = 'quantsec_user_data';\n\n  // Store user data securely\n  static storeUserData(userData: UserData): void {\n    try {\n      localStorage.setItem(this.STORAGE_KEY, JSON.stringify(userData));\n    } catch (error) {\n      console.error('Failed to store user data:', error);\n      throw new Error('Failed to store user data');\n    }\n  }\n\n  // Retrieve user data\n  static getUserData(): UserData | null {\n    try {\n      const data = localStorage.getItem(this.STORAGE_KEY);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.error('Failed to retrieve user data:', error);\n      return null;\n    }\n  }\n\n  // Check if user is logged in\n  static isLoggedIn(): boolean {\n    return this.getUserData() !== null;\n  }\n\n  // Get current user\n  static getCurrentUser(): UserData | null {\n    return this.getUserData();\n  }\n\n  // Clear user data (logout)\n  static clearUserData(): void {\n    try {\n      localStorage.removeItem(this.STORAGE_KEY);\n    } catch (error) {\n      console.error('Failed to clear user data:', error);\n    }\n  }\n\n  // Update user data (e.g., after key import/export)\n  static updateUserData(updates: Partial<UserData>): void {\n    const currentData = this.getUserData();\n    if (currentData) {\n      const updatedData = { ...currentData, ...updates };\n      this.storeUserData(updatedData);\n    }\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///D:/projs/qsa/quant-sec-web/src/app/login/page.tsx"],"sourcesContent":["'use client';\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport {\n  Box,\n  Button,\n  TextField,\n  Typography,\n  Container,\n  Alert,\n  CircularProgress,\n  Paper,\n  Link as MuiLink,\n} from '@mui/material';\nimport Link from 'next/link';\nimport { ApiClient, UserStorage } from '@/lib/api';\nimport { useAuth } from '@/context/AuthContext';\n\nexport default function LoginPage() {\n  const router = useRouter();\n  const { login } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Form data\n  const [loginInput, setLoginInput] = useState('');\n  const [password, setPassword] = useState('');\n  \n  // Validation\n  const [loginInputError, setLoginInputError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n\n  const validateForm = (): boolean => {\n    let isValid = true;\n    \n    // Reset errors\n    setLoginInputError('');\n    setPasswordError('');\n    \n    // Validate username\n    if (!loginInput.trim()) {\n      setLoginInputError('Email or Username is required');\n      isValid = false;\n    }\n    \n    // Validate password\n    if (!password) {\n      setPasswordError('Password is required');\n      isValid = false;\n    }\n    \n    return isValid;\n  };\n\n  const handleLogin = async () => {\n    if (!validateForm()) {\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    setLoginInputError('');\n    \n    try {\n      const response = await ApiClient.loginUser(loginInput, password);\n      if (response.Status === 'Positive') {\n        login(loginInput);\n        router.replace('/dashboard');\n      } else {\n        setError(response.Message || 'User not found or password incorrect.');\n      }\n      \n    } catch (err) {\n      setError('Login failed. Please try again.');\n      console.error('Login error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      handleLogin();\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 4 }}>\n      <Paper sx={{ p: 4 }}>\n        <Typography variant=\"h4\" gutterBottom align=\"center\">\n          Login\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" sx={{ mb: 4 }}>\n          Access your Quantum Secure Email Account\n        </Typography>\n\n        {error && (\n          <Alert severity=\"error\" sx={{ mb: 2 }}>\n            {error}\n          </Alert>\n        )}\n\n        <Box sx={{ mt: 2 }}>\n          <TextField\n            fullWidth\n            label=\"Email or Username\"\n            value={loginInput}\n            onChange={(e) => setLoginInput(e.target.value)}\n            error={!!loginInputError}\n            helperText={loginInputError}\n            margin=\"normal\"\n            disabled={loading}\n            onKeyDown={handleKeyDown}\n          />\n          <TextField\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            error={!!passwordError}\n            helperText={passwordError}\n            margin=\"normal\"\n            disabled={loading}\n            onKeyDown={handleKeyDown}\n          />\n        </Box>\n\n        <Box sx={{ mt: 4 }}>\n          <Button\n            fullWidth\n            variant=\"contained\"\n            size=\"large\"\n            onClick={handleLogin}\n            disabled={loading}\n            startIcon={loading ? <CircularProgress size={20} /> : null}\n          >\n            {loading ? 'Logging in...' : 'Login'}\n          </Button>\n        </Box>\n\n        <Box sx={{ mt: 3, textAlign: 'center' }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Don't have an account?{' '}\n            <Link href=\"/register\" passHref>\n              <MuiLink component=\"span\" sx={{ cursor: 'pointer' }}>\n                Register here\n              </MuiLink>\n            </Link>\n          </Typography>\n        </Box>\n      </Paper>\n    </Container>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}